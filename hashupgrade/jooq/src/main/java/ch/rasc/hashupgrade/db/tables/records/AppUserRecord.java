/*
 * This file is generated by jOOQ.
 */
package ch.rasc.hashupgrade.db.tables.records;


import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ch.rasc.hashupgrade.db.tables.AppUser;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppUserRecord extends UpdatableRecordImpl<AppUserRecord> implements Record4<Long, String, String, String> {

    private static final long serialVersionUID = -1041158094;

    /**
     * Setter for <code>APP_USER.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>APP_USER.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>APP_USER.USER_NAME</code>.
     */
    public void setUserName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>APP_USER.USER_NAME</code>.
     */
    public String getUserName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>APP_USER.EMAIL</code>.
     */
    public void setEmail(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>APP_USER.EMAIL</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>APP_USER.PASSWORD_HASH</code>.
     */
    public void setPasswordHash(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>APP_USER.PASSWORD_HASH</code>.
     */
    public String getPasswordHash() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AppUser.APP_USER.ID;
    }

    @Override
    public Field<String> field2() {
        return AppUser.APP_USER.USER_NAME;
    }

    @Override
    public Field<String> field3() {
        return AppUser.APP_USER.EMAIL;
    }

    @Override
    public Field<String> field4() {
        return AppUser.APP_USER.PASSWORD_HASH;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUserName();
    }

    @Override
    public String component3() {
        return getEmail();
    }

    @Override
    public String component4() {
        return getPasswordHash();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUserName();
    }

    @Override
    public String value3() {
        return getEmail();
    }

    @Override
    public String value4() {
        return getPasswordHash();
    }

    @Override
    public AppUserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AppUserRecord value2(String value) {
        setUserName(value);
        return this;
    }

    @Override
    public AppUserRecord value3(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public AppUserRecord value4(String value) {
        setPasswordHash(value);
        return this;
    }

    @Override
    public AppUserRecord values(Long value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AppUserRecord
     */
    public AppUserRecord() {
        super(AppUser.APP_USER);
    }

    /**
     * Create a detached, initialised AppUserRecord
     */
    public AppUserRecord(Long id, String userName, String email, String passwordHash) {
        super(AppUser.APP_USER);

        set(0, id);
        set(1, userName);
        set(2, email);
        set(3, passwordHash);
    }
}
